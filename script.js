// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ DOM
document.addEventListener('DOMContentLoaded', function() {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–ª–∞–≤–Ω–æ–π –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å—Å—ã–ª–æ–∫
    initSmoothScrolling();
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    initModal();
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–æ—Ä–º—ã
    initForm();
    
    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–Ω–∏–º–∞—Ü–∏–π –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ
    initScrollAnimations();
});

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram
const TELEGRAM_BOT_TOKEN = '8112921007:AAHvjM0SWYMZDh3xucPLMMfKyPmZ7TYfztY';
const TELEGRAM_CHAT_IDS = ['1049514305', '1039331603'];

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–ª–∞–≤–Ω–æ–π –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
function initSmoothScrolling() {
    const navLinks = document.querySelectorAll('nav a');
    
    navLinks.forEach(link => {
        link.addEventListener('click', function(e) {
            e.preventDefault();
            
            const targetId = this.getAttribute('href');
            const targetSection = document.querySelector(targetId);
            
            if (targetSection) {
                const headerHeight = document.querySelector('header').offsetHeight;
                const targetPosition = targetSection.offsetTop - headerHeight;
                
                window.scrollTo({
                    top: targetPosition,
                    behavior: 'smooth'
                });
            }
        });
    });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function initModal() {
    const modal = document.getElementById('carModal');
    const sellCarBtn = document.getElementById('sellCarBtn');
    const closeModal = document.getElementById('closeModal');
    
    // –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    if (sellCarBtn && modal) {
        sellCarBtn.addEventListener('click', function() {
            modal.classList.add('visible');
            document.body.style.overflow = 'hidden';
        });
    }
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    if (closeModal && modal) {
        closeModal.addEventListener('click', function() {
            modal.classList.remove('visible');
            document.body.style.overflow = 'auto';
        });
    }
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ –æ–±–ª–∞—Å—Ç–∏
    window.addEventListener('click', function(e) {
        const modal = document.getElementById('carModal');
        if (e.target === modal) {
            modal.classList.remove('visible');
            document.body.style.overflow = 'auto';
        }
    });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
async function sendToTelegram(formData) {
    const message = `üöó *–ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê –ù–ê –í–´–ö–£–ü –ê–í–¢–û* üöó\n\n` +
                   `*–ú–∞—Ä–∫–∞:* ${formData.brand}\n` +
                   `*–ú–æ–¥–µ–ª—å:* ${formData.model}\n` +
                   `*–ì–æ–¥:* ${formData.year}\n` +
                   `*–ñ–µ–ª–∞–µ–º–∞—è —Ü–µ–Ω–∞:* ${formData.price} —Ä—É–±.\n` +
                   `*–ò–º—è:* ${formData.name}\n` +
                   `*–¢–µ–ª–µ—Ñ–æ–Ω:* ${formData.phone}\n\n` +
                   `*–î–∞—Ç–∞:* ${new Date().toLocaleString('ru-RU')}`;

    let successCount = 0;

    // –°–ø–∏—Å–æ–∫ CORS –ø—Ä–æ–∫—Å–∏ –¥–ª—è –æ–±—Ö–æ–¥–∞ –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫
    const corsProxies = [
        '',
        'https://cors-anywhere.herokuapp.com/',
        'https://api.codetabs.com/v1/proxy?quest=',
        'https://corsproxy.io/?'
    ];

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ–º –ø–æ–ª—É—á–∞—Ç–µ–ª—è–º
    for (const chatId of TELEGRAM_CHAT_IDS) {
        let sent = false;
        
        // –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –ø—Ä–æ–∫—Å–∏ –∏ –º–µ—Ç–æ–¥—ã
        for (const proxy of corsProxies) {
            try {
                const url = `${proxy}https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`;
                
                // –ü—Ä–æ–±—É–µ–º –º–µ—Ç–æ–¥ —Å JSON
                try {
                    const response = await fetch(url, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            chat_id: chatId,
                            text: message,
                            parse_mode: 'Markdown'
                        })
                    });

                    if (response.ok) {
                        successCount++;
                        sent = true;
                        console.log(`–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —á–∞—Ç ${chatId} —á–µ—Ä–µ–∑ POST`);
                        break;
                    }
                } catch (e) {
                    console.log('POST –º–µ—Ç–æ–¥ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª, –ø—Ä–æ–±—É–µ–º GET...');
                }

                // –ü—Ä–æ–±—É–µ–º GET –º–µ—Ç–æ–¥ (–±–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω—ã–π –¥–ª—è CORS)
                const getUrl = `${proxy}https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage?chat_id=${chatId}&text=${encodeURIComponent(message)}&parse_mode=Markdown`;
                
                const getResponse = await fetch(getUrl, {
                    method: 'GET',
                    mode: 'cors'
                });

                if (getResponse.ok) {
                    successCount++;
                    sent = true;
                    console.log(`–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —á–∞—Ç ${chatId} —á–µ—Ä–µ–∑ GET`);
                    break;
                }

            } catch (error) {
                console.log(`–û—à–∏–±–∫–∞ —Å –ø—Ä–æ–∫—Å–∏ ${proxy}:`, error);
                continue;
            }
        }

        if (!sent) {
            console.error(`–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ —á–∞—Ç ${chatId} –ø–æ—Å–ª–µ –≤—Å–µ—Ö –ø–æ–ø—ã—Ç–æ–∫`);
        }
    }

    return successCount > 0;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Ñ–æ—Ä–º—ã
function initForm() {
    const carForm = document.getElementById('carForm');
    
    if (carForm) {
        carForm.addEventListener('submit', async function(e) {
            e.preventDefault();
            
            // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
            const formData = {
                brand: document.getElementById('brand').value.trim(),
                model: document.getElementById('model').value.trim(),
                year: document.getElementById('year').value.trim(),
                price: document.getElementById('price').value.trim(),
                name: document.getElementById('name').value.trim(),
                phone: document.getElementById('phone').value.trim()
            };
            
            // –í–∞–ª–∏–¥–∞—Ü–∏—è
            const error = validateForm(formData);
            if (error) {
                showNotification(error, true);
                return;
            }
            
            // –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–∞–¥–µ—Ä
            const loader = document.getElementById('loader');
            if (loader) {
                loader.style.display = 'flex';
            }
            
            try {
                // –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ Telegram
                const telegramSuccess = await sendToTelegram(formData);
                
                // –°–∫—Ä—ã—Ç—å –ª–æ–∞–¥–µ—Ä
                if (loader) {
                    loader.style.display = 'none';
                }
                
                if (telegramSuccess) {
                    showNotification('‚úÖ –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 15 –º–∏–Ω—É—Ç.', 'success');
                } else {
                    showNotification('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–∑–≤–æ–Ω–∏—Ç–µ –Ω–∞–º –Ω–∞–ø—Ä—è–º—É—é.', 'error');
                }
                
                // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
                setTimeout(() => {
                    const modal = document.getElementById('carModal');
                    if (modal) {
                        modal.classList.remove('visible');
                    }
                    document.body.style.overflow = 'auto';
                    carForm.reset();
                }, 2000);
                
            } catch (error) {
                // –°–∫—Ä—ã—Ç—å –ª–æ–∞–¥–µ—Ä –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
                if (loader) {
                    loader.style.display = 'none';
                }
                showNotification('‚úÖ –ó–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞! –ú—ã –ø–µ—Ä–µ–∑–≤–æ–Ω–∏–º –≤–∞–º –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.', 'success');
                
                // –í—Å–µ —Ä–∞–≤–Ω–æ –∑–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É
                setTimeout(() => {
                    const modal = document.getElementById('carModal');
                    if (modal) {
                        modal.classList.remove('visible');
                    }
                    document.body.style.overflow = 'auto';
                    carForm.reset();
                }, 2000);
            }
        });
    }
}

// –§—É–Ω–∫—Ü–∏—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ñ–æ—Ä–º—ã
function validateForm(formData) {
    if (!formData.brand || !formData.model || !formData.year || 
        !formData.price || !formData.name || !formData.phone) {
        return '–í—Å–µ –ø–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è';
    }
    
    if (formData.year < 1990 || formData.year > new Date().getFullYear() + 1) {
        return '–£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≥–æ–¥ –≤—ã–ø—É—Å–∫–∞';
    }
    
    if (formData.price <= 0) {
        return '–£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Ü–µ–Ω—É';
    }
    
    if (formData.name.length < 2) {
        return '–ò–º—è –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—åËá≥Â∞ë 2 —Å–∏–º–≤–æ–ª–∞';
    }
    
    const phoneDigits = formData.phone.replace(/\D/g, '');
    if (phoneDigits.length < 10) {
        return '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞';
    }
    
    return null;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
function showNotification(message, type) {
    const notification = document.getElementById('notification');
    
    if (notification) {
        // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ —Ü–≤–µ—Ç–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞
        notification.textContent = message;
        notification.style.backgroundColor = type === 'success' ? '#4CAF50' : '#f44336';
        
        // –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        notification.classList.add('show');
        
        // –°–∫—Ä—ã—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        setTimeout(function() {
            notification.classList.remove('show');
        }, 5000);
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∞–Ω–∏–º–∞—Ü–∏–π –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ
function initScrollAnimations() {
    const animatedElements = document.querySelectorAll('.feature-card, .step-card, .contact-card');
    
    // –°–æ–∑–¥–∞–Ω–∏–µ –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—è –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ
    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.style.animation = 'fadeInUp 1s ease-out forwards';
                observer.unobserve(entry.target);
            }
        });
    }, { threshold: 0.1 });
    
    // –ù–∞–±–ª—é–¥–µ–Ω–∏–µ –∑–∞ –≤—Å–µ–º–∏ –∞–Ω–∏–º–∏—Ä—É–µ–º—ã–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏
    animatedElements.forEach(element => {
        element.style.opacity = '0';
        observer.observe(element);
    });
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —ç—Ñ—Ñ–µ–∫—Ç–æ–≤ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫–∏
document.querySelectorAll('.btn').forEach(btn => {
    btn.addEventListener('mouseenter', function() {
        this.style.transform = 'scale(1.05)';
    });
    
    btn.addEventListener('mouseleave', function() {
        this.style.transform = '';
    });
});

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫
document.querySelectorAll('.feature-card, .step-card, .contact-card').forEach(card => {
    card.addEventListener('mouseenter', function() {
        this.style.boxShadow = '0 15px 30px rgba(0, 0, 0, 0.15)';
    });
    
    card.addEventListener('mouseleave', function() {
        this.style.boxShadow = '0 5px 15px rgba(0, 0, 0, 0.1)';
    });
});

// –ú–∞—Å–∫–∞ –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞
const phoneInput = document.getElementById('phone');
if (phoneInput) {
    phoneInput.addEventListener('input', function(e) {
        let value = e.target.value.replace(/\D/g, '');
        if (value.length > 11) value = value.substring(0, 11);
        
        let formattedValue = '';
        if (value.length > 0) {
            formattedValue = '+7 ';
            if (value.length > 1) formattedValue += '(' + value.substring(1, 4);
            if (value.length > 4) formattedValue += ') ' + value.substring(4, 7);
            if (value.length > 7) formattedValue += '-' + value.substring(7, 9);
            if (value.length > 9) formattedValue += '-' + value.substring(9, 11);
        }
        
        e.target.value = formattedValue;
    });

}
